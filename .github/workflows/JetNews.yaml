name: JetNews

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/JetNews.yaml'
      - 'JetNews/**'
  pull_request:
    paths:
      - '.github/workflows/JetNews.yaml'
      - 'JetNews/**'
  workflow_dispatch:

env:
  SAMPLE_PATH: JetNews
  compose_store_password: ${{ secrets.compose_store_password }}
  compose_key_alias: ${{ secrets.compose_key_alias }}
  compose_key_password: ${{ secrets.compose_key_password }}
jobs:
  build:
    uses: ./.github/workflows/build-sample.yml
    with:
      name: JetNews
      path: JetNews
    secrets:
      compose_store_password: ${{ secrets.COMPOSE_STORE_PASSWORD }}
      compose_key_alias: ${{ secrets.COMPOSE_KEY_ALIAS }}
      compose_key_password: ${{ secrets.COMPOSE_KEY_PASSWORD }}

  androidTest:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        api-level: [23, 26, 29]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Enable KVM group perms
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm
      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Generate cache key
        run: ./scripts/checksum.sh $SAMPLE_PATH checksum.txt

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: gradle-${{ hashFiles('checksum.txt') }}
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
            path: |
              ~/.android/avd/*
              ~/.android/adb*
            key: avd-${{ matrix.api-level }}
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          arch: x86
          disable-animations: true
          script: ./gradlew connectedCheck --stacktrace
          working-directory: ${{ env.SAMPLE_PATH }}

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-jetnews-${{ matrix.api-level }}
          path: ${{ env.SAMPLE_PATH }}/app/build/reports/androidTests
